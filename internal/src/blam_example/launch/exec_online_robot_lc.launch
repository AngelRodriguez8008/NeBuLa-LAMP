<launch>
  <arg name="robot_namespace" default="robot"/>

    <!-- optional filename of the zip archive of a pose graph to be loaded -->
  <arg name="load_pose_graph_file" default=""/> 

  <arg name="lamp_name" default="blam_slam"/>

  <arg name="ops_env" default="field"/>

  <group ns="$(arg robot_namespace)">

    <node pkg="blam_slam"
          name="$(arg lamp_name)"
          type="blam_slam_node"
          output="screen">

      <!-- Load graph -->
      <param name="load_graph" value="$(arg load_pose_graph_file)"/>

      <!-- tf pub -->
      <param name="b_publish_tfs" value="false"/>

      <!-- Topics -->
      <remap from="~artifact" to="~artifact_global" />
      <remap from="~artifact_relative" to="artifact_reconciliation/reconciled_artifact" />
      <remap from="~uwb_signal" to="comm/uwb/anchor" />
      <remap from="~localization_integrated_estimate" to="~localization_integrated_estimate_lc" />

      <!-- Pose graph subscriptions -->
      <remap from="~pose_graph_sub" to="blam_slam_fe/pose_graph" />
      <remap from="~keyed_scans_sub" to="blam_slam_fe/keyed_scans" />
      <remap from="~artifact_global_sub" to="blam_slam_fe/artifact_global" />
      <!-- <remap from="~localization_incremental_estimate_sub" to="blam_slam_fe/localization_incremental_estimate" /> -->
      
      <remap from="~repub_pg_signal_out" to="blam_slam_fe/repub_pg_signal_in"/>

      <!-- Back end, so no changing messsages from the frontend or raw lidar -->

      <!-- Pose Graph Publishing -->
      <remap from="~pose_graph" to="~pose_graph_lc" />

      <!-- Serives -->
      <remap from="~drop_uwb_anchor" to="drop_uwb_anchor"/>

      <!-- Initial pose -->
      <rosparam param="init">
        position: {x: 0.0, y: 0.0, z: 0.0}
        orientation: {roll: 0.0, pitch: 0.0, yaw: 0.0}
        position_sigma: {x: 0.2, y: 0.2, z: 0.2}
        orientation_sigma: {roll: 0.041, pitch: 0.041, yaw: 0.041}
      </rosparam>

      <!-- Noise parameters -->
      <rosparam param="noise">
        odom_position_sigma: 0.6324
        odom_attitude_sigma: 0.316
      </rosparam>      

      <!-- Flag on whether it is front=end or not -->
      <param name="b_is_front_end" value="false" type="bool"/>

      <!-- Flag on whether to use the front end -->
      <param name="b_use_lo_frontend" value="false" type="bool"/>
      
      <!-- Rates -->
      <rosparam file="$(find blam_example)/config/blam_rates.yaml"/>

      <!-- Frames -->
      <rosparam file="$(find blam_example)/config/blam_frames.yaml" subst_value="true"/>

      <!-- List of UWB anchors -->
      <rosparam file="$(find blam_example)/config/dropped_items_list.yaml"/>

      <!-- Point cloud filter -->
      <rosparam file="$(find point_cloud_filter)/config/parameters.yaml"/>

      <!-- Point cloud odometry -->
      <rosparam file="$(find point_cloud_odometry)/config/parameters.yaml"/>

      <!-- Point cloud localization -->
      <rosparam file="$(find point_cloud_localization)/config/parameters.yaml"/>

      <!-- Point cloud mapper -->
      <rosparam file="$(find point_cloud_mapper)/config/parameters.yaml"/>

      <!-- Point cloud visualization -->
      <rosparam file="$(find point_cloud_visualizer)/config/parameters.yaml"/>

      <!-- General Setup and Loop closure -->
      <rosparam file="$(find laser_loop_closure)/config/setup_parameters.yaml"/>
      <rosparam file="$(find laser_loop_closure)/config/pose_graph_parameters.yaml"/>
      <rosparam file="$(find laser_loop_closure)/config/loop_closure_parameters.yaml"/>
      <rosparam file="$(find laser_loop_closure)/config/uwb_parameters.yaml"/>
      <rosparam file="$(find laser_loop_closure)/config/robustness_parameters.yaml"/>

      <!-- Multirobot -->
      <rosparam file="$(find blam_slam)/config/parameters.yaml"/>
    
      <!--AprilTags -->
      <rosparam file="$(find blam_slam)/config/$(arg ops_env)/apriltag_parameters.yaml"/>

      <!-- show which to subscribe to of the robots -->
      <rosparam file="$(find laser_loop_closure)/config/robot_names.yaml" />
      <!-- TODO Change this to be only the robot this runs on -->

      <!-- The robot prefix dependent of robot_namespace -->
      <param name="robot_prefix" value="a" if="$(eval robot_namespace == 'husky1')" />
      <param name="robot_prefix" value="b" if="$(eval robot_namespace == 'husky2')"/>
      <param name="robot_prefix" value="c" if="$(eval robot_namespace == 'husky3')"/>
      <param name="robot_prefix" value="f" if="$(eval robot_namespace == 'husky4')"/>
      <param name="robot_prefix" value="d" if="$(eval robot_namespace == 'telemax')"/>
      <param name="robot_prefix" value="e" if="$(eval robot_namespace == 'husky')"/>

      <!-- The artifact prefix dependent of robot_namespace -->
      <param name="artifact_prefix" value="l" if="$(eval robot_namespace == 'husky1')" />
      <param name="artifact_prefix" value="m" if="$(eval robot_namespace == 'husky2')"/>
      <param name="artifact_prefix" value="n" if="$(eval robot_namespace == 'husky3')"/>
      <param name="artifact_prefix" value="q" if="$(eval robot_namespace == 'husky4')"/>
      <param name="artifact_prefix" value="o" if="$(eval robot_namespace == 'telemax')"/>
      <param name="artifact_prefix" value="p" if="$(eval robot_namespace == 'husky')"/>

      <!-- Set LAMP to run as basestation -->
      <param name="b_is_basestation" value="false" type="bool"/>

    </node>

  </group>

</launch>
