#############################################
# PARAMETERS FOR LASER LOOP CLOSURES (ROBOT)
#############################################

robot: 

  # Initialization method { IDENTITY, ODOMETRY, ODOM_ROTATION, FEATURES, TEASER }
  icp_initialization_method: 4

  # ICP covariance calculation method { POINT2POINT, POINT2PLANE }
  icp_covariance_calculation: 1

  # Translation threshold for new nodes to compute values for loop closure checking
  translation_threshold_nodes: 1.0

  # When searching through old poses for loop closures, only consider old poses
  # that are within this distance of the current pose.
  proximity_threshold: 10

  # To compute a loop closure we perform ICP between the current scan and laser
  # scans captured from nearby poses. In order to be considered a loop closure,
  # the ICP "fitness score" must be less than this number.
  max_tolerable_fitness: 0.10

  # Don't attempt loop closures with poses in the graph that were collected within
  # this translational distance (m) from the current pose.
  distance_to_skip_recent_poses: 10 #10 # 200

  # If a loop has recently been closed, don't close a new one for at least this
  # amount of translational distance (m).
  distance_before_reclosing: 5 #10

  # If a batchloop has recently been closed, don't close a new one for at least this
  # amount of translational distance (m).
  distance_before_batch_reclosing: 10 #3

  # if a loop closure is found but the angle is larger than this, reject it
  max_rotation_deg: 50

  #--------------------------------------------------------------------------------
  # ICP Settings for laser loop closure
  #--------------------------------------------------------------------------------

  icp_lc:
    # Stop ICP if the transformation from the last iteration was this small.
    tf_epsilon: 0.0000000001

    # During ICP, two points won't be considered a correspondence if they are at
    # least this far from one another.
    corr_dist: 5.0

    # Iterate ICP this many times.
    iterations: 5 # Default from original branch is 20: 

    # Number of threads for multithreaded GICP
    threads: 1
  
  #--------------------------------------------------------------------------------
  # SAC-IA Settings for feature-based initialization
  #--------------------------------------------------------------------------------

  sac_ia:
    # Iterate SAC-IA this many times.
    iterations: 10

    # Number of previous and next scans to accumulate for target pointcloud
    # 0 means no accumulation
    num_prev_scans: 2
    num_next_scans: 2

    # Radii of area to consider when computing normals and features
    normals_radius: 1.0
    features_radius: 2.0

    # If SAC fitness score is more than the following value, it will be rejected
    fitness_score_threshold: 0.30

  
  #--------------------------------------------------------------------------------
  # TEASER Settings for feature-based initialization
  #--------------------------------------------------------------------------------
  
  TEASERPP:

    num_inlier_threshold: 5
    rotation_cost_threshold: 1.0 # Default value in TEASER++: 0.005
    rotation_max_iterations: 100
    noise_bound: 0.05
    # For finding FPFH correspondences
    TEASER_FPFH_normals_radius: 1.5
    TEASER_FPFH_features_radius: 2.5


  #--------------------------------------------------------------------------------
  # Harris keypoints Settings 
  #--------------------------------------------------------------------------------
  
  harris3D:
    # Set the threshold value to filter out weak corners. This is only evaluated if non maxima suppression is turned on.
    harris_threshold: 0.000000005

    # Whether non maxima suppression should be applied or the response for each point should be returned
    harris_suppression: true

    # the radius for normal estimation as well as for non maxima suppression
    harris_radius: 0.1

    # Whether the detected key points should be refined or not
    harris_refine: false

    # Response type: {HARRIS = 1, NOBLE, LOWE, TOMASI, CURVATURE}
    harris_response: 1

#############################################
# PARAMETERS FOR LASER LOOP CLOSURES (BASE)
#############################################

base: 
  # Initialization method { IDENTITY, ODOMETRY, ODOM_ROTATION, FEATURES, TEASER }
  icp_initialization_method: 4

  # ICP covariance calculation method { POINT2POINT, POINT2PLANE }
  icp_covariance_calculation: 1

  # Translation threshold for new nodes to compute values for loop closure checking
  translation_threshold_nodes: 1.0

  # When searching through old poses for loop closures, only consider old poses
  # that are within this distance of the current pose.
  proximity_threshold: 3

  # To compute a loop closure we perform ICP between the current scan and laser
  # scans captured from nearby poses. In order to be considered a loop closure,
  # the ICP "fitness score" must be less than this number.
  max_tolerable_fitness: 2.5 #0.04

  # Don't attempt loop closures with poses in the graph that were collected within
  # this translational distance (m) from the current pose.
  distance_to_skip_recent_poses: 15 #10 # 200

  # If a loop has recently been closed, don't close a new one for at least this
  # amount of translational distance (m).
  distance_before_reclosing: 10

  # if a loop closure is found but the angle is larger than this, reject it
  max_rotation_deg: 50

  # If a batchloop has recently been closed, don't close a new one for at least this
  # amount of translational distance (m).
  distance_before_batch_reclosing: 10 #3


  #--------------------------------------------------------------------------------
  # ICP Settings for laser loop closure
  #--------------------------------------------------------------------------------

  icp_lc:
    # Stop ICP if the transformation from the last iteration was this small.
    tf_epsilon: 0.0000000001

    # During ICP, two points won't be considered a correspondence if they are at
    # least this far from one another.
    corr_dist: 1.0

    # Iterate ICP this many times.
    # Check this
    iterations: 10 #was 5 # Default from original branch is 20: 
                  # For ground truth generation set it to a high number (100)
    
    # Number of threads for multithreaded GICP
    threads: 3

  #--------------------------------------------------------------------------------
  # SAC-IA Settings for feature-based initialization
  #--------------------------------------------------------------------------------

  sac_ia:
    # Iterate SAC-IA this many times.
    iterations: 10

    # Number of previous scans to accumulate for target pointcloud
    # 0 means no accumulation
    num_prev_scans: 3
    num_next_scans: 0
    
    # Radii of area to consider when computing normals and features
    normals_radius: 1.0
    features_radius: 2.0

    # If SAC fitness score is more than the following value, it will be rejected
    fitness_score_threshold: 3.0 #was 0.30

    
  #--------------------------------------------------------------------------------
  # TEASER Settings for feature-based initialization
  #--------------------------------------------------------------------------------
  
  TEASERPP:

    num_inlier_threshold: 5
    rotation_cost_threshold: 1.0 # Default value in TEASER++: 0.005
    rotation_max_iterations: 100
    noise_bound: 0.05
    # For finding FPFH correspondences
    TEASER_FPFH_normals_radius: 1.5
    TEASER_FPFH_features_radius: 2.5

  #--------------------------------------------------------------------------------
  # Harris keypoints Settings 
  #--------------------------------------------------------------------------------
  
  harris3D:
    # Set the threshold value to filter out weak corners. This is only evaluated if non maxima suppression is turned on.
    harris_threshold: 0.000000005

    # Whether non maxima suppression should be applied or the response for each point should be returned
    harris_suppression: true

    # the radius for normal estimation as well as for non maxima suppression
    harris_radius: 0.1

    # Whether the detected key points should be refined or not
    harris_refine: false

    # Response type: {HARRIS = 1, NOBLE, LOWE, TOMASI, CURVATURE}
    harris_response: 1